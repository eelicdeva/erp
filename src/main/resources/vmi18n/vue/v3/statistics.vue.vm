<template>
  <div class="app-container">
    <el-card>
      <template #header><span>{{ $t('book.categoryStatistic') }}</span></template>
      <div class="el-table el-table--enable-row-hover el-table--medium">
        <div ref="${businessName}Stats" style="height: 420px" />
      </div>
    </el-card>
  </div>
</template>

<script setup>
import { list${BusinessName}} from "@/api/${moduleName}/${businessName}";
import i18n from '@/lang/index';
import * as echarts from 'echarts';
const { t } = i18n.global;
const { proxy } = getCurrentInstance();

let stats = ref();
const ${businessName}Stats = ref(null);

#if($table.chartType == "1")
function initData() {
  list${BusinessName}().then(response => {
    const ${BusinessName}StatsIntance = echarts.init(${businessName}Stats.value, "macarons");
    ${BusinessName}StatsIntance.setOption({
      xAxis: {
        type: 'category',
        data: response.rows.map(a => a.${table.xAxisChart})
      },
      yAxis: {
        type: 'value'
      },
      series: [
        {
          data: response.rows.map(a => a.${table.yAxisChart}),
          type: 'line'
        }
      ]
    });
  });
}
#elseif($table.chartType == "2")
function initData() {
  list${BusinessName}().then(response => {
    const ${BusinessName}StatsIntance = echarts.init(${businessName}Stats.value, "macarons");
    ${BusinessName}StatsIntance.setOption({
      xAxis: {
        data:  response.rows.map(a => a.${table.xAxisChart}),
        axisLabel: {
          inside: true,
          color: '#fff'
        },
        axisTick: {
          show: false
        },
        axisLine: {
          show: false
        },
        z: 10
      },
      yAxis: {
        axisLine: {
          show: false
        },
        axisTick: {
          show: false
        },
        axisLabel: {
          color: '#999'
        }
      },
      dataZoom: [
        {
          type: 'inside'
        }
      ],
      series: [
        {
          type: 'bar',
          showBackground: true,
          itemStyle: {
            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
              { offset: 0, color: '#83bff6' },
              { offset: 0.5, color: '#188df0' },
              { offset: 1, color: '#188df0' }
            ])
          },
          emphasis: {
            itemStyle: {
              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                { offset: 0, color: '#2378f7' },
                { offset: 0.7, color: '#2378f7' },
                { offset: 1, color: '#83bff6' }
              ])
            }
          },
          data: response.rows.map(a => a.${table.yAxisChart})
        }
      ]
    });
  });
}
#end

initData();
</script>
