<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${packageName}.mapper.${ClassName}Mapper">
    
    <resultMap type="${ClassName}" id="${ClassName}Result">
#foreach ($column in $columns)
        <result property="${column.javaField}"    column="${column.columnName}"    />
#end
    </resultMap>
#if($table.sub)

    <resultMap id="${ClassName}${subClassName}Result" type="${ClassName}" extends="${ClassName}Result">
        <collection property="${subclassName}List" notNullColumn="sub_${subTable.pkColumn.columnName}" javaType="java.util.List" resultMap="${subClassName}Result" />
    </resultMap>

    <resultMap type="${subClassName}" id="${subClassName}Result">
#foreach ($column in $subTable.columns)
        <result property="${column.javaField}"    column="sub_${column.columnName}"    />
#end
    </resultMap>
#end

    <sql id="case">
            case (#{langUser})
    </sql>

    <sql id="select${ClassName}Vo">
        select#foreach($column in $columns) #if($column.isI18n)
        #set($columnNameEn=$column.columnName + '_en')
        #set($columnNameId=$column.columnName + '_id')

        <include refid="case"/>
        when "en" then (select $columnNameEn from ${tableName} where ${pkColumn.columnName} = a.${pkColumn.columnName})
        when "id" then (select $columnNameId from ${tableName} where ${pkColumn.columnName} = a.${pkColumn.columnName})
        when "zh" then (select $column.columnName from ${tableName} where ${pkColumn.columnName} = a.${pkColumn.columnName})
        end as $column.columnName#else$column.columnName#end #if($foreach.count != $columns.size()),#end#end from ${tableName} a
    </sql>

    <select id="select${ClassName}List" parameterType="${ClassName}" resultMap="${ClassName}Result">
        <include refid="select${ClassName}Vo"/>
        <where>
#foreach($column in $columns)
#set($queryType=$column.queryType)
#set($javaField=$column.javaField)
#set($javaType=$column.javaType)
#set($columnName=$column.columnName)
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
#set($columnNameEn=$column.columnName + '_en')
#set($columnNameId=$column.columnName + '_id')
#set($param=$className + '.' + $javaField)
#if($column.query)
#if($column.queryType == "EQ")
#if($column.isI18n)
        <if test="$param != null #if($javaType == 'String' ) and $javaField.trim() != ''#end">
            and $columnName = #{$param}
            or $columnNameEn = #{$param}
            or $columnNameId = #{$param}
        </if>
#else        <if test="$param != null #if($javaType == 'String' ) and $javaField.trim() != ''#end"> and $columnName = #{$param}</if>
#end
#elseif($queryType == "NE")
             <if test="$param != null #if($javaType == 'String' ) and $javaField.trim() != ''#end"> and $columnName != #{$param}</if>
#elseif($queryType == "GT")
             <if test="$param != null #if($javaType == 'String' ) and $javaField.trim() != ''#end"> and $columnName &gt; #{$param}</if>
#elseif($queryType == "GTE")
             <if test="$param != null #if($javaType == 'String' ) and $javaField.trim() != ''#end"> and $columnName &gt;= #{$param}</if>
#elseif($queryType == "LT")
             <if test="$param != null #if($javaType == 'String' ) and $javaField.trim() != ''#end"> and $columnName &lt; #{$param}</if>
#elseif($queryType == "LTE")
             <if test="$param != null #if($javaType == 'String' ) and $javaField.trim() != ''#end"> and $columnName &lt;= #{$param}</if>
#elseif($queryType == "LIKE")
#if($column.isI18n)
        <if test="$param != null #if($javaType == 'String' ) and $javaField.trim() != ''#end">
             and $columnName like concat('%', #{$param}, '%')
             or $columnNameEn like concat('%', #{$param}, '%')
             or $columnNameId like concat('%', #{$param}, '%')
        </if>
#else        <if test="$param != null #if($javaType == 'String' ) and $javaField.trim() != ''#end"> and $columnName like concat('%', #{$param}, '%')</if>
#end
#elseif($queryType == "BETWEEN")
             <if test="params.begin$AttrName != null and params.begin$AttrName != '' and params.end$AttrName != null and params.end$AttrName != ''"> and $columnName between #{params.begin$AttrName} and #{params.end$AttrName}</if>
#end
#end
#end
        </where>
    </select>
    
    <select id="select${ClassName}By${pkColumn.capJavaField}" resultMap="#if($table.sub)${ClassName}${subClassName}Result#else${ClassName}Result#end">
#if($table.crud || $table.tree)
        <include refid="select${ClassName}Vo"/>
        where ${pkColumn.columnName} = #{${pkColumn.javaField}}
#elseif($table.sub)
        select#foreach($column in $columns) a.$column.columnName#if($foreach.count != $columns.size()),#end#end,
           #foreach($column in $subTable.columns) b.$column.columnName as sub_$column.columnName#if($foreach.count != $subTable.columns.size()),#end#end

        from ${tableName} a
        left join ${subTableName} b on b.${subTableFkName} = a.${pkColumn.columnName}
        where a.${pkColumn.columnName} = #{${pkColumn.javaField}}
#end
    </select>
    #set($param=$className + '.' + $pkColumn.javaField)
    <insert id="insert${ClassName}" parameterType="${ClassName}"#if($pkColumn.increment) useGeneratedKeys="true" keyProperty="$param"#end>
        #if($pkColumn.javaType == 'String' && !$pkColumn.increment)
            <selectKey keyProperty="$pkColumn.javaField" resultType="String" order="BEFORE">
                select REPLACE(UUID(),"-","")
            </selectKey>
        #end
        insert into ${tableName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
#foreach($column in $columns)
#set($param=$className + '.' + $column.javaField)
#if($column.columnName != $pkColumn.columnName || !$pkColumn.increment)
#if(!$column.isSubI18n)
            <if test="$param != null#if($column.javaType == 'String' && $column.required) and $param != ''#end">$column.columnName,</if>
#if($column.isI18n)
#set($columnNameEn=$column.columnName + '_en')
#set($columnNameId=$column.columnName + '_id')
            <if test="$param != null#if($column.javaType == 'String' && $column.required) and $param != ''#end">$columnNameEn,</if>
            <if test="$param != null#if($column.javaType == 'String' && $column.required) and $param != ''#end">$columnNameId,</if>
#end
#end
#end
#end
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
#foreach($column in $columns)
#set($param=$className + '.' + $column.javaField)
#if($column.columnName != $pkColumn.columnName || !$pkColumn.increment)
#if($column.isI18n)
            <if test="$param != null#if($column.javaType == 'String' && $column.required) and $param != ''#end">
                <foreach item="$column.javaField" collection="$column.javaField" separator="," close="," >
                    #{$column.javaField}
                </foreach>
            </if>
#elseif(!$column.isSubI18n)
            <if test="$param != null#if($column.javaType == 'String' && $column.required) and $param != ''#end">#{$param},</if>
#end
#end
#end
         </trim>
    </insert>

    <update id="update${ClassName}" parameterType="${ClassName}">
        update ${tableName}
        <trim prefix="SET" suffixOverrides=",">
#foreach($column in $columns)
#set($columnNameEn=$column.columnName + '_en')
#set($columnNameId=$column.columnName + '_id')
#set($param=$className + '.' + $column.javaField)
#if($column.columnName != $pkColumn.columnName)
#if(!$column.isSubI18n && !$column.isI18n)
            <if test="$param != null#if($column.javaType == 'String' && $column.required) and $param != ''#end">$column.columnName = #{$param},</if>
#elseif(!$column.isSubI18n && $column.isI18n)
            <if test="$param != null#if($column.javaType == 'String' && $column.required) and $param != ''#end">
                $columnNameEn = <include refid="case"/>
                when "en" then #{$param}
                else $columnNameEn
                end,
                $column.columnName = <include refid="case"/>
                when "zh" then #{$param}
                else $column.columnName
                end,
                $columnNameId = <include refid="case"/>
                when "id" then #{$param}
                else $columnNameId
                end,
            </if>
#end
#end
#end
#set($param=$className + '.' + $pkColumn.javaField)
        </trim>
        where ${pkColumn.columnName} = #{${param}}
    </update>

    <delete id="delete${ClassName}By${pkColumn.capJavaField}" parameterType="${pkColumn.javaType}">
        delete from ${tableName} where ${pkColumn.columnName} = #{${pkColumn.javaField}}
    </delete>

    <delete id="delete${ClassName}By${pkColumn.capJavaField}s" parameterType="String">
        delete from ${tableName} where ${pkColumn.columnName} in 
        <foreach item="${pkColumn.javaField}" collection="array" open="(" separator="," close=")">
            #{${pkColumn.javaField}}
        </foreach>
    </delete>
#if($table.sub)
    
    <delete id="delete${subClassName}By${subTableFkClassName}s" parameterType="String">
        delete from ${subTableName} where ${subTableFkName} in 
        <foreach item="${subTableFkclassName}" collection="array" open="(" separator="," close=")">
            #{${subTableFkclassName}}
        </foreach>
    </delete>

    <delete id="delete${subClassName}By${subTableFkClassName}" parameterType="${pkColumn.javaType}">
        delete from ${subTableName} where ${subTableFkName} = #{${subTableFkclassName}}
    </delete>

    <insert id="batch${subClassName}">
        insert into ${subTableName}(#foreach($column in $subTable.columns) $column.columnName#if($foreach.count != $subTable.columns.size()),#end#end) values
		<foreach item="item" index="index" collection="list" separator=",">
            (#foreach($column in $subTable.columns) #{item.$column.javaField}#if($foreach.count != $subTable.columns.size()),#end#end)
        </foreach>
    </insert>
#end
</mapper>