<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.mapper.SysDeptMapper">

	<resultMap type="SysDept" id="SysDeptResult">
		<id     property="deptId"     column="dept_id"     />
		<result property="parentId"   column="parent_id"   />
		<result property="ancestors"  column="ancestors"   />
		<result property="deptName"   column="dept_name"   />
		<result property="orderNum"   column="order_num"   />
		<result property="leader"     column="leader"      />
		<result property="phone"      column="phone"       />
		<result property="email"      column="email"       />
		<result property="status"     column="status"      />
		<result property="delFlag"    column="del_flag"    />
		<result property="parentName" column="parent_name" />
		<result property="createBy"   column="create_by"   />
		<result property="createTime" column="create_time" />
		<result property="updateBy"   column="update_by"   />
		<result property="updateTime" column="update_time" />
	</resultMap>

	<sql id="case">
		case (#{langUser})
	</sql>

	<sql id="selectDeptName">
		<include refid="case"/>
		when "en" then (select dept_name_en from sys_dept where dept_id = d.dept_id)
		when "zh" then (select dept_name from sys_dept where dept_id = d.dept_id)
		when "id" then (select dept_name_id from sys_dept where dept_id = d.dept_id)
		end as dept_name
	</sql>

	<sql id="selectDeptVo">
		select d.dept_id, d.parent_id, d.ancestors, <include refid="selectDeptName"/>, d.order_num, d.leader, d.phone, d.email, d.status, d.del_flag, d.create_by, d.create_time
		from sys_dept d
	</sql>

	<select id="selectDeptList" parameterType="SysDept" resultMap="SysDeptResult">
		<include refid="selectDeptVo"/>
		where d.del_flag = '0'
		<if test="d.deptId != null and d.deptId != 0">
			AND dept_id = #{d.deptId}
		</if>
		<if test="d.parentId != null and d.parentId != 0">
			AND parent_id = #{d.parentId}
		</if>
		<if test="d.deptName != null and d.deptName != ''">
			AND dept_name like concat('%', #{d.deptName}, '%')
			OR dept_name_en like concat('%', #{d.deptName}, '%')
			OR dept_name_id like concat('%', #{d.deptName}, '%')
		</if>
		<if test="d.status != null and d.status != ''">
			AND status = #{d.status}
		</if>
		<!--数据范围过滤-->
	<!--Data range filtering-->
        ${d.params.dataScope}
		order by d.parent_id, d.order_num
	</select>

	<select id="selectDeptListByRoleId" resultType="Long">
		select d.dept_id
		from sys_dept d
		left join sys_role_dept rd on d.dept_id = rd.dept_id
		where rd.role_id = #{roleId}
		<if test="deptCheckStrictly">
			and d.dept_id not in (select d.parent_id from sys_dept d inner join sys_role_dept rd on d.dept_id = rd.dept_id and rd.role_id = #{roleId})
		</if>
		order by d.parent_id, d.order_num
	</select>

	<select id="selectDeptById" resultMap="SysDeptResult">
		<include refid="selectDeptVo"/>
		where dept_id = #{deptId}
	</select>

	<select id="checkDeptExistUser" parameterType="Long" resultType="int">
		select count(1) from sys_user where dept_id = #{deptId} and del_flag = '0'
	</select>

	<select id="hasChildByDeptId" parameterType="Long" resultType="int">
		select count(1) from sys_dept
		where del_flag = '0' and parent_id = #{deptId} limit 1
	</select>

	<select id="selectChildrenDeptById" parameterType="Long" resultMap="SysDeptResult">
		select * from sys_dept where find_in_set(#{deptId}, ancestors)
	</select>

	<select id="selectNormalChildrenDeptById" parameterType="Long" resultType="int">
		select count(*) from sys_dept where status = 0 and del_flag = '0' and find_in_set(#{deptId}, ancestors)
	</select>

	<select id="checkDeptNameUnique" resultMap="SysDeptResult">
		select dept_id, parent_id, ancestors, dept_name, dept_name_en, dept_name_id, order_num, leader, phone, email, status, del_flag, create_by, create_time
		from sys_dept
		where dept_name=#{deptName} or dept_name_en=#{deptName} or dept_name_id=#{deptName} and parent_id = #{parentId} limit 1
	</select>

	<insert id="insertDept" parameterType="SysDept">
		insert into sys_dept(
		<if test="d.deptId != null and d.deptId != 0">dept_id,</if>
		<if test="d.parentId != null and d.parentId != 0">parent_id,</if>
		<if test="d.deptName != null and d.deptName != ''">dept_name,</if>
		<if test="d.deptName != null and d.deptName != ''">dept_name_en,</if>
		<if test="d.deptName != null and d.deptName != ''">dept_name_id,</if>
		<if test="d.ancestors != null and d.ancestors != ''">ancestors,</if>
		<if test="d.orderNum != null">order_num,</if>
		<if test="d.leader != null and d.leader != ''">leader,</if>
		<if test="d.phone != null and d.phone != ''">phone,</if>
		<if test="d.email != null and d.email != ''">email,</if>
		<if test="d.status != null">status,</if>
		<if test="d.createBy != null and d.createBy != ''">create_by,</if>
		create_time
		)values(
		<if test="d.deptId != null and d.deptId != 0">#{d.deptId},</if>
		<if test="d.parentId != null and d.parentId != 0">#{d.parentId},</if>
		<foreach item="deptNameCat" collection="deptNameCat" separator="," close="," >
			<if test="d.deptName != null and d.deptName != '' "> #{deptNameCat} </if>
		</foreach>
		<if test="d.ancestors != null and d.ancestors != ''">#{d.ancestors},</if>
		<if test="d.orderNum != null">#{d.orderNum},</if>
		<if test="d.leader != null and d.leader != ''">#{d.leader},</if>
		<if test="d.phone != null and d.phone != ''">#{d.phone},</if>
		<if test="d.email != null and d.email != ''">#{d.email},</if>
		<if test="d.status != null">#{d.status},</if>
		<if test="d.createBy != null and d.createBy != ''">#{d.createBy},</if>
		sysdate()
		)
	</insert>

	<update id="updateDept" parameterType="SysDept">
		update sys_dept
		<set>
			<if test="d.parentId != null and d.parentId != 0">parent_id = #{d.parentId},</if>
			<if test="d.deptName != null and d.deptName != ''">
				dept_name_en = <include refid="case"/>
				when "en" then #{d.deptName}
				else dept_name_en
				end,
				dept_name = <include refid="case"/>
				when "zh" then #{d.deptName}
				else dept_name
				end,
				dept_name_id = <include refid="case"/>
				when "id" then #{d.deptName}
				else dept_name_id
				end,
			</if>
			<if test="d.ancestors != null and d.ancestors != ''">ancestors = #{d.ancestors},</if>
			<if test="d.orderNum != null">order_num = #{d.orderNum},</if>
			<if test="d.leader != null">leader = #{d.leader},</if>
			<if test="d.phone != null">phone = #{d.phone},</if>
			<if test="d.email != null">email = #{d.email},</if>
			<if test="d.status != null and d.status != ''">status = #{d.status},</if>
			<if test="d.updateBy != null and d.updateBy != ''">update_by = #{d.updateBy},</if>
			update_time = sysdate()
		</set>
		where dept_id = #{d.deptId}
	</update>

	<update id="updateDeptChildren" parameterType="java.util.List">
		update sys_dept set ancestors =
		<foreach collection="depts" item="item" index="index"
				 separator=" " open="case dept_id" close="end">
			when #{item.deptId} then #{item.ancestors}
		</foreach>
		where dept_id in
		<foreach collection="depts" item="item" index="index"
				 separator="," open="(" close=")">
			#{item.deptId}
		</foreach>
	</update>

	<update id="updateDeptStatusNormal" parameterType="Long">
		update sys_dept set status = '0' where dept_id in
		<foreach collection="array" item="deptId" open="(" separator="," close=")">
			#{deptId}
		</foreach>
	</update>

	<delete id="deleteDeptById" parameterType="Long">
		update sys_dept set del_flag = '2' where dept_id = #{deptId}
	</delete>

</mapper> 