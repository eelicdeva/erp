<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.mapper.SysNoticeMapper">

    <resultMap type="SysNotice" id="SysNoticeResult">
        <result property="noticeId"       column="notice_id"       />
        <result property="noticeTitle"    column="notice_title"    />
        <result property="noticeType"     column="notice_type"     />
        <result property="noticeContent"  column="notice_content"  />
        <result property="status"         column="status"          />
        <result property="createBy"       column="create_by"       />
        <result property="createTime"     column="create_time"     />
        <result property="updateBy"       column="update_by"       />
        <result property="updateTime"     column="update_time"     />
        <result property="remark"         column="remark"          />
    </resultMap>

    <sql id="case">
        case (#{langUser})
    </sql>

    <sql id="selectNoticeVo">
        select notice_id,
        <include refid="case"/>
        when "en" then (select notice_title_en from sys_notice where notice_id = n.notice_id)
        when "id" then (select notice_title_id from sys_notice where notice_id = n.notice_id)
        when "zh" then (select notice_title from sys_notice where notice_id = n.notice_id)
        end as notice_title, notice_type, cast(notice_content as char) as notice_content, status, create_by, create_time, update_by, update_time, remark
        from sys_notice n
    </sql>

    <select id="selectNoticeById" resultMap="SysNoticeResult">
        <include refid="selectNoticeVo"/>
        where notice_id = #{noticeId}
    </select>

    <select id="selectNoticeList" parameterType="SysNotice" resultMap="SysNoticeResult">
        <include refid="selectNoticeVo"/>
        <where>
			<if test="n.noticeTitle != null and n.noticeTitle != ''">
				AND notice_title like concat('%', #{n.noticeTitle}, '%')
                OR notice_title_en like concat('%', #{n.noticeTitle}, '%')
                OR notice_title_id like concat('%', #{n.noticeTitle}, '%')
			</if>
			<if test="n.noticeType != null and n.noticeType != ''">
				AND notice_type = #{n.noticeType}
			</if>
			<if test="n.createBy != null and n.createBy != ''">
				AND create_by like concat('%', #{n.createBy}, '%')
			</if>
		</where>
    </select>

    <insert id="insertNotice" parameterType="SysNotice">
        insert into sys_notice (
            <if test="n.noticeTitle != null and n.noticeTitle != '' ">notice_title, </if>
            <if test="n.noticeTitle != null and n.noticeTitle != '' ">notice_title_en, </if>
            <if test="n.noticeTitle != null and n.noticeTitle != '' ">notice_title_id, </if>
			<if test="n.noticeType != null and n.noticeType != '' ">notice_type, </if>
			<if test="n.noticeContent != null and n.noticeContent != '' ">notice_content, </if>
			<if test="n.status != null and n.status != '' ">status, </if>
			<if test="n.remark != null and n.remark != ''">remark,</if>
 			<if test="n.createBy != null and n.createBy != ''">create_by,</if>
 			create_time
 		)values(
            <foreach item="noticeCat" collection="noticeCat" separator="," close="," >
                <if test="n.noticeTitle != null and n.noticeTitle != '' "> #{noticeCat} </if>
            </foreach>
			<if test="n.noticeType != null and n.noticeType != ''">#{n.noticeType}, </if>
			<if test="n.noticeContent != null and n.noticeContent != ''">#{n.noticeContent}, </if>
			<if test="n.status != null and n.status != ''">#{n.status}, </if>
			<if test="n.remark != null and n.remark != ''">#{n.remark},</if>
 			<if test="n.createBy != null and n.createBy != ''">#{n.createBy},</if>
 			sysdate()
		)
    </insert>

    <update id="updateNotice" parameterType="SysNotice">
        update sys_notice
        <set>
            <if test="n.noticeTitle != null and n.noticeTitle != ''">
                notice_title_en = <include refid="case"/>
                when "en" then #{n.noticeTitle}
                else notice_title_en
                end,
                notice_title = <include refid="case"/>
                when "zh" then #{n.noticeTitle}
                else notice_title
                end,
                notice_title_id = <include refid="case"/>
                when "id" then #{n.noticeTitle}
                else notice_title_id
                end,
            </if>
            <if test="n.noticeType != null and n.noticeType != ''">notice_type = #{n.noticeType}, </if>
            <if test="n.noticeContent != null">notice_content = #{n.noticeContent}, </if>
            <if test="n.status != null and n.status != ''">status = #{n.status}, </if>
            <if test="n.updateBy != null and n.updateBy != ''">update_by = #{n.updateBy},</if>
 			update_time = sysdate()
        </set>
        where notice_id = #{n.noticeId}
    </update>

    <delete id="deleteNoticeById" parameterType="Long">
        delete from sys_notice where notice_id = #{noticeId}
    </delete>

    <delete id="deleteNoticeByIds" parameterType="Long">
        delete from sys_notice where notice_id in
        <foreach item="noticeId" collection="array" open="(" separator="," close=")">
            #{noticeId}
        </foreach>
    </delete>

</mapper>